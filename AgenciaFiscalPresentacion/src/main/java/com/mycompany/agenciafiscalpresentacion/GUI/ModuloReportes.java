package com.mycompany.agenciafiscalpresentacion.GUI;

import bo.GenerarReporteBO;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;

//imports de itext5 (para genearar PDF)
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import daos.TramiteDAO;
import entidades.Persona;
import entidades.Tramite;
import daos.TramiteDAO;
import excepciones.NegocioException;
import excepciones.PersistenciaException;
import java.awt.HeadlessException;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.text.BadLocationException;
import negocioDTO.PersonaDTO;
import negocioDTO.TramiteDTO;


/**
 *
 * @author luiis
 */
public class ModuloReportes extends javax.swing.JPanel {

    private static final Logger LOG = Logger.getLogger(ModuloReportes.class.getName());
    private List<PersonaDTO> personasEncontradas;
    private DefaultListModel<String> modeloLista;
    private List<TramiteDTO> tramites;
    private Calendar fechaDesde;
    private Calendar fechaHasta;
    private String tipoTramite;
    private PersonaDTO persona;
    
    /**
     * Creates new form ModuloReportes
     */
    public ModuloReportes() {
        initComponents();
        iniciar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jdcDesde = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jdcHasta = new com.toedter.calendar.JDateChooser();
        cmbTipoTramite = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblTramites = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        scrollPane = new javax.swing.JScrollPane();
        jListPersonas = new javax.swing.JList<>();
        txtNombre = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        cbxBuscarNombre = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        btnBuscar = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        btnRegresar = new javax.swing.JButton();
        btnGenerar = new javax.swing.JButton();

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable2);

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        add(jdcDesde, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, -1, -1));

        jLabel1.setFont(new java.awt.Font("Avenir Next", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Filtros de busqueda");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 140, -1));

        jLabel2.setFont(new java.awt.Font("Avenir Next", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Desde:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, -1, -1));

        jLabel3.setFont(new java.awt.Font("Avenir Next", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Hasta:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 70, -1, -1));
        add(jdcHasta, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 90, -1, -1));

        cmbTipoTramite.setFont(new java.awt.Font("Avenir Next", 1, 13)); // NOI18N
        cmbTipoTramite.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todos", "Licencia", "Placas" }));
        cmbTipoTramite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTipoTramiteActionPerformed(evt);
            }
        });
        add(cmbTipoTramite, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, 230, -1));

        jLabel4.setFont(new java.awt.Font("Avenir Next", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Tipo tramite:");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, -1, 20));

        tblTramites.setFont(new java.awt.Font("Avenir Next", 0, 13)); // NOI18N
        tblTramites.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nombre", "Fecha tramite", "Tipo tramite", "Costo"
            }
        ));
        jScrollPane2.setViewportView(tblTramites);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 90, 360, 220));

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jListPersonas.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        scrollPane.setViewportView(jListPersonas);

        jPanel1.add(scrollPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 230, 60));

        txtNombre.setEditable(false);
        txtNombre.setText(" ");
        jPanel1.add(txtNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 230, -1));

        jLabel5.setFont(new java.awt.Font("Avenir Next", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Ingrese nombre de la persona:");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        cbxBuscarNombre.setFont(new java.awt.Font("Avenir Next", 0, 14)); // NOI18N
        cbxBuscarNombre.setForeground(new java.awt.Color(0, 0, 0));
        cbxBuscarNombre.setText("Buscar por nombre");
        cbxBuscarNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxBuscarNombreActionPerformed(evt);
            }
        });
        jPanel1.add(cbxBuscarNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, -1, -1));

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, 250, 140));

        jPanel2.setBackground(new java.awt.Color(138, 47, 47));

        btnBuscar.setFont(new java.awt.Font("Avenir Next", 1, 14)); // NOI18N
        btnBuscar.setForeground(new java.awt.Color(0, 0, 0));
        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnBuscar)
                .addContainerGap(558, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnBuscar)
                .addContainerGap(8, Short.MAX_VALUE))
        );

        add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 320, 640, 40));

        jPanel4.setBackground(new java.awt.Color(35, 26, 26));
        jPanel4.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 5, 0));

        jPanel5.setBackground(new java.awt.Color(98, 76, 76));
        jPanel5.setPreferredSize(new java.awt.Dimension(200, 60));
        jPanel5.setLayout(new java.awt.GridBagLayout());

        jLabel6.setFont(new java.awt.Font("Avenir Next", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Módulo de reportes");
        jPanel5.add(jLabel6, new java.awt.GridBagConstraints());

        jPanel4.add(jPanel5);

        add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 0, 220, 80));

        jPanel3.setBackground(new java.awt.Color(138, 47, 47));

        btnRegresar.setFont(new java.awt.Font("Avenir Next", 1, 14)); // NOI18N
        btnRegresar.setForeground(new java.awt.Color(0, 0, 0));
        btnRegresar.setText("Regresar");
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnRegresar)
                .addContainerGap(543, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnRegresar)
                .addContainerGap(8, Short.MAX_VALUE))
        );

        add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        btnGenerar.setFont(new java.awt.Font("Avenir Next", 1, 14)); // NOI18N
        btnGenerar.setForeground(new java.awt.Color(0, 0, 0));
        btnGenerar.setText("Generar PDF");
        btnGenerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarActionPerformed(evt);
            }
        });
        add(btnGenerar, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 50, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void cmbTipoTramiteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTipoTramiteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbTipoTramiteActionPerformed

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        regresarMenu();
    }//GEN-LAST:event_btnRegresarActionPerformed

    private void cbxBuscarNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxBuscarNombreActionPerformed
        txtNombre.setEditable(cbxBuscarNombre.isSelected());
        txtNombre.setEnabled(cbxBuscarNombre.isSelected());
        if(!cbxBuscarNombre.isSelected()) {
            txtNombre.setText("");
            personasEncontradas.clear();
            scrollPane.setVisible(false);
        }
    }//GEN-LAST:event_cbxBuscarNombreActionPerformed

    private void btnGenerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarActionPerformed

        Document documento = new Document();
        try {
            String ruta = System.getProperty("user.home");
            PdfWriter.getInstance(documento, new FileOutputStream(ruta + "/Desktop/ConsultaGenerada.pdf"));
            documento.open();


            PdfPTable tabla = new PdfPTable(4);
            tabla.addCell("Nombre Completo");
            tabla.addCell("Tipo");
            tabla.addCell("Costo MXN");
            tabla.addCell("Fecha Emisión");

            TramiteDAO tramiteDAO = new TramiteDAO();
            List<Tramite> tramites = tramiteDAO.obtenerTramites();
//            List<Tramite> tramites = tramiteDAO.obtenerTramitePorTipo("licencia");
//            tramites.addAll(tramiteDAO.obtenerTramitePorTipo("placas"));

            for (Tramite tramite : tramites) {
                tabla.addCell(tramite.getPersona().getNombreCompleto());
                tabla.addCell(tramite.getClass().getSimpleName());
                tabla.addCell(String.valueOf(tramite.getCostoMxn()));
                tabla.addCell(tramite.getFechaEmisionString());
            }

            documento.add(tabla);
            documento.close();
            JOptionPane.showMessageDialog(null, "Reporte creado");

        } catch (DocumentException | HeadlessException | FileNotFoundException e) {
            JOptionPane.showMessageDialog(null, e);
        } catch (PersistenciaException ex) {
            Logger.getLogger(ModuloReportes.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnGenerarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        obtenerTramites();
        mostrarTramites();
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void obtenerTramites() {
        try {
            fechaDesde = jdcDesde.getCalendar();
            fechaHasta = jdcHasta.getCalendar();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, """
                                                Las fechas introducidas no son v\u00e1lidas. 
                                                No se aplicar\u00e1 el filtro de fechas.""");
        } finally {
            fechaDesde = null;
            fechaHasta = null;
        }
        
        if(!txtNombre.getText().isBlank() && persona == null) {
            JOptionPane.showMessageDialog(null, "No se encontró a la persona, proceso cancelado.");
            return;
        }
        
        tipoTramite = (String) cmbTipoTramite.getSelectedItem();
        if(tipoTramite.equalsIgnoreCase("Todos")) tipoTramite = null;
        
        try {
            tramites = Ventanas.generarReporte.obtenerTramites(fechaDesde, fechaHasta, tipoTramite, persona);
        } catch (NegocioException ex) {
            Logger.getLogger(ModuloReportes.class.getName()).log(Level.SEVERE, null, ex);
            tramites = null;
        }
    }
    
    private void mostrarTramites() {
        if(tramites == null) {
            System.out.println("No hay tramites");
            return;
        }
        for(TramiteDTO tramite : tramites) {
            System.out.println(tramite.getClass().getSimpleName());
        }
    }
    
    
    private void iniciar() {
        Ventanas.generarReporte = new GenerarReporteBO();
        personasEncontradas = new ArrayList<>();
        modeloLista = new DefaultListModel<>();
        tramites = null;
        fechaDesde = null;
        fechaHasta = null;
        tipoTramite = null;
        persona = null;
        
        
        scrollPane.setVisible(false);
        txtNombre.setEnabled(false);
        txtNombre.setEditable(false);
        
        validarDatoBusqueda();
    }
    
    private void validarDatoBusqueda(){
        javax.swing.text.Document doc = txtNombre.getDocument();
        doc.addDocumentListener(new javax.swing.event.DocumentListener() {
            @Override
            public void insertUpdate(javax.swing.event.DocumentEvent e) {
                validar(e);
            }

            @Override
            public void removeUpdate(javax.swing.event.DocumentEvent e) {
                validar(e);
            }

            @Override
            public void changedUpdate(javax.swing.event.DocumentEvent e) {
                validar(e);
            }

            private void validar(javax.swing.event.DocumentEvent e) {
                try {
                    javax.swing.text.Document doc = e.getDocument();
                    String texto = doc.getText(0, doc.getLength());
                    if (texto.isBlank()) {
                        personasEncontradas.clear();
                    } else if (texto.matches("^[A-Za-z ]+$")) {
                        buscarPersonasPorNombre(texto);
                    }
                    actualizarJList();
                } catch (BadLocationException ex) {
                    Logger.getLogger(ModuloConsultas.class.getName()).log(Level.SEVERE, null, ex);
                }
                
            }
        });
    }
    
    private void actualizarJList() {
        modeloLista.clear();
        if(personasEncontradas!=null && !personasEncontradas.isEmpty()){
            List<String> lista = nombresPersonas();
            for (String nombrePersona : lista) {
                modeloLista.addElement(nombrePersona);
            }
            jListPersonas.setModel(modeloLista);
            scrollPane.setVisible(true);
            jListPersonas.setVisible(true);
        }else{
            
            scrollPane.setVisible(false);
        }
            
    }
    
    private List<String> nombresPersonas(){
        List<String> nombres = new ArrayList<>();
        for (PersonaDTO p : personasEncontradas) {
            nombres.add(p.getNombreCompleto());
        }
        return nombres;
    }
    
    private void buscarPersonasPorNombre(String nombreABuscar){
        PersonaDTO persona = new PersonaDTO();
        persona.setNombreCompleto(nombreABuscar);
        //personasEncontradas.clear();
        try {
            personasEncontradas = Ventanas.consultas.consultarPersonasPorCriterio(persona,"nombre");
            if(personasEncontradas!=null){
                System.out.println(scrollPane.isVisible());
                System.out.println("-------se encontraron personas-------");
                for (PersonaDTO p : personasEncontradas) {
                    System.out.println(p.getNombreCompleto());
                }
            }else System.out.println("Lista vacia");
            
        } catch (NegocioException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }
    
    public void reiniciarPanel(){
        cmbTipoTramite.setSelectedIndex(0);
        txtNombre.setText("");
        txtNombre.setEnabled(false);
        cbxBuscarNombre.setSelected(false);
        limpiarTabla();
        jdcDesde.setCalendar(null);
        jdcHasta.setCalendar(null);
        
        tramites = null;
        fechaDesde = null;
        fechaHasta = null;
        tipoTramite = null;
        persona = null;
    }
    
    public void limpiarTabla(){
        DefaultTableModel temp = (DefaultTableModel) tblTramites.getModel();
        int filas = tblTramites.getRowCount();

        for (int a = 0; filas > a; a++) {
            temp.removeRow(0);
        }
    }

    private void regresarMenu(){
        reiniciarPanel();
        ((Ventanas) SwingUtilities.getWindowAncestor(this)).mostrarVentana("MenuJpanel");
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnGenerar;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JCheckBox cbxBuscarNombre;
    private javax.swing.JComboBox<String> cmbTipoTramite;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JList<String> jListPersonas;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable2;
    private com.toedter.calendar.JDateChooser jdcDesde;
    private com.toedter.calendar.JDateChooser jdcHasta;
    private javax.swing.JScrollPane scrollPane;
    private javax.swing.JTable tblTramites;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
}
